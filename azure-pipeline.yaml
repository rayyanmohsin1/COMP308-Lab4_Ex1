trigger:
- main

pool:
  name: 'Default'

variables:
  NODE_VERSION: '18'

stages:
  - stage: Build
    displayName: "Build Stage"
    jobs:
      - job: BuildAndTest
        displayName: "Build and Test Job"
        steps:
          # Step 1: Use Node.js Tool Installer
          - task: UseNode@1
            inputs:
              version: $(NODE_VERSION)
              checkLatest: true
            displayName: "Install Node.js $(NODE_VERSION)"

          # Step 2: Install dependencies, lint, and build the frontend
          - script: |
              cd frontend
              npm install
              npm run lint
              npm run build
            displayName: "Install, Lint, and Build Frontend"

          # Step 3: Install dependencies and build the backend
          - script: |
              cd backend
              npm install
              npm run build
            displayName: "Install and Build Backend"

          # Step 4: Install Jest in the backend
          - script: |
              cd backend
              npm install --save-dev jest
            displayName: "Install Jest in Backend"

          # Step 4: Run backend unit tests and generate coverage report
          - script: |
              cd backend
              npm run test -- --coverage
            displayName: "Run Backend Unit Tests and Generate Coverage Report"

          # Step 5: Publish test results (if applicable)
          - task: PublishTestResults@2
            inputs:
              testResultsFiles: '**/test-results.xml'
              testRunTitle: 'Unit Tests'

  - stage: Deliver
    displayName: "Deliver Stage"
    dependsOn: Build
    jobs:
      - job: DeliverJob
        displayName: "Deliver Artifact"
        steps:
          # Step 1: Publish frontend artifact
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: './frontend/dist'
              artifact: 'frontend'
              publishLocation: 'pipeline'

          # Step 2: Publish backend artifact
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: './backend/build'
              artifact: 'backend'
              publishLocation: 'pipeline'

  - stage: DeployToDev
    displayName: "Deploy to Dev Environment"
    dependsOn: Deliver
    jobs:
      - job: DeployToDevJob
        displayName: "Deploy to Dev"
        steps:
          # Mock deployment for Dev
          - script: |
              echo "Mock deployment to Dev Environment"
            displayName: "Mock Deploy to Dev"

  - stage: DeployToQAT
    displayName: "Deploy to QAT Environment"
    dependsOn: DeployToDev
    jobs:
      - job: DeployToQATJob
        displayName: "Deploy to QAT"
        steps:
          # Mock deployment for QAT
          - script: |
              echo "Mock deployment to QAT Environment"
            displayName: "Mock Deploy to QAT"

  - stage: DeployToStaging
    displayName: "Deploy to Staging Environment"
    dependsOn: DeployToQAT
    jobs:
      - job: DeployToStagingJob
        displayName: "Deploy to Staging"
        steps:
          # Mock deployment for Staging
          - script: |
              echo "Mock deployment to Staging Environment"
            displayName: "Mock Deploy to Staging"

  - stage: DeployToProduction
    displayName: "Deploy to Production Environment"
    dependsOn: DeployToStaging
    jobs:
      - job: DeployToProdJob
        displayName: "Deploy to Production"
        steps:
          # Mock deployment for Production
          - script: |
              echo "Mock deployment to Production Environment"
            displayName: "Mock Deploy to Production"
